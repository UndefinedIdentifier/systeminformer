name: continuous-integration

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  workflow_dispatch:
    
permissions:
  contents: write
  
jobs:
  tag:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag and push
        run: |
          $TAG_NAME="v1.0.1"  # 指定要打的 tag 名称
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nuget Packages
      run: nuget restore .\packages.config -PackagesDirectory .\packages\
    - name: Build Init
      shell: cmd
      working-directory: ${{github.workspace}}
      run: build\build_init.cmd
    - name: Build Solution
      shell: cmd
      working-directory: ${{github.workspace}}
      run: build\build_verbose.cmd
    - name: Archive build artifacts
      run: tar -czf build_artifacts.tar.gz -C ${{github.workspace}}/bin .
  build_driver:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Nuget Packages
      run: nuget restore .\packages.config -PackagesDirectory .\packages\
    - name: Build Tools
      shell: cmd
      working-directory: ${{github.workspace}}
      run: build\build_tools.cmd
    - name: Build Driver
      shell: cmd
      working-directory: ${{github.workspace}}
      run: build\build_zdriver.cmd prefast
    - name: Archive build artifacts
      run: tar -czf build_driver_artifacts.tar.gz -C ${{github.workspace}}/bin .      
  
  release:
    runs-on: windows-latest
    needs: [build, build_driver]    # 确保在构建成功后再执行发布任务
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build_artifacts.tar.gz   # 要上传的文件
            build_driver_artifacts.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
